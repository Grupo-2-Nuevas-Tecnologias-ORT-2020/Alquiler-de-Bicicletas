// <auto-generated />
using System;
using AlquilerDeBicicletas.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AlquilerDeBicicletas.Migrations
{
    [DbContext(typeof(AlquilerDeBicisDatabseContext))]
    [Migration("20201128201411_primerMigracion")]
    partial class primerMigracion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AlquilerDeBicicletas.Models.Accesorio", b =>
                {
                    b.Property<int>("accesorioID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("color");

                    b.Property<DateTime>("fechaDeIngreso");

                    b.Property<int?>("tipoDeAccesorioID");

                    b.HasKey("accesorioID");

                    b.HasIndex("tipoDeAccesorioID");

                    b.ToTable("Accesorios");
                });

            modelBuilder.Entity("AlquilerDeBicicletas.Models.Alquiler", b =>
                {
                    b.Property<int>("alquilerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("bicicletaID");

                    b.Property<bool>("cambioFecha");

                    b.Property<int>("estadoAlquiler");

                    b.Property<DateTime>("fechaDesde");

                    b.Property<DateTime>("fechaEntregaFinal");

                    b.Property<DateTime>("fechaHasta");

                    b.Property<int>("horasBase");

                    b.Property<int>("horasExtras");

                    b.Property<double>("totalAPagarBase");

                    b.Property<double>("totalAPagarExtra");

                    b.Property<int?>("usuarioID");

                    b.HasKey("alquilerID");

                    b.HasIndex("bicicletaID");

                    b.HasIndex("usuarioID");

                    b.ToTable("Alquileres");
                });

            modelBuilder.Entity("AlquilerDeBicicletas.Models.AlquilerAccesorio", b =>
                {
                    b.Property<int>("alquilerID");

                    b.Property<int>("accesorioID");

                    b.HasKey("alquilerID", "accesorioID");

                    b.HasIndex("accesorioID");

                    b.ToTable("AlquilerAccesorio");
                });

            modelBuilder.Entity("AlquilerDeBicicletas.Models.Bicicleta", b =>
                {
                    b.Property<int>("bicicletaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("color");

                    b.Property<DateTime>("fechaDeIngreso");

                    b.Property<int?>("tipoDeBiciID");

                    b.HasKey("bicicletaID");

                    b.HasIndex("tipoDeBiciID");

                    b.ToTable("Bicicletas");
                });

            modelBuilder.Entity("AlquilerDeBicicletas.Models.Pago", b =>
                {
                    b.Property<int>("pagoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("alquilerID");

                    b.Property<bool>("esPagoBase");

                    b.Property<DateTime>("fechaDePago");

                    b.Property<int>("formaDePago");

                    b.Property<double>("monto");

                    b.HasKey("pagoID");

                    b.HasIndex("alquilerID");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("AlquilerDeBicicletas.Models.TipoDeAccesorio", b =>
                {
                    b.Property<int>("tipoDeAccesorioID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre");

                    b.Property<double>("precioBase");

                    b.HasKey("tipoDeAccesorioID");

                    b.ToTable("TiposDeAccesorio");
                });

            modelBuilder.Entity("AlquilerDeBicicletas.Models.TipoDeBici", b =>
                {
                    b.Property<int>("tipoDeBiciID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre");

                    b.Property<double>("precioBase");

                    b.HasKey("tipoDeBiciID");

                    b.ToTable("TiposDeBici");
                });

            modelBuilder.Entity("AlquilerDeBicicletas.Models.Usuario", b =>
                {
                    b.Property<int>("usuarioID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("apellido");

                    b.Property<string>("contrasena");

                    b.Property<string>("dni");

                    b.Property<string>("eMail");

                    b.Property<DateTime>("fechaNacimiento");

                    b.Property<string>("nombre");

                    b.HasKey("usuarioID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AlquilerDeBicicletas.Models.Accesorio", b =>
                {
                    b.HasOne("AlquilerDeBicicletas.Models.TipoDeAccesorio", "tipoDeAccesorio")
                        .WithMany("accesorios")
                        .HasForeignKey("tipoDeAccesorioID");
                });

            modelBuilder.Entity("AlquilerDeBicicletas.Models.Alquiler", b =>
                {
                    b.HasOne("AlquilerDeBicicletas.Models.Bicicleta", "bicicleta")
                        .WithMany("alquileres")
                        .HasForeignKey("bicicletaID");

                    b.HasOne("AlquilerDeBicicletas.Models.Usuario", "usuario")
                        .WithMany("alquileres")
                        .HasForeignKey("usuarioID");
                });

            modelBuilder.Entity("AlquilerDeBicicletas.Models.AlquilerAccesorio", b =>
                {
                    b.HasOne("AlquilerDeBicicletas.Models.Accesorio", "accesorio")
                        .WithMany("alquileresAccesorio")
                        .HasForeignKey("accesorioID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AlquilerDeBicicletas.Models.Alquiler", "alquiler")
                        .WithMany("accesoriosAlquiler")
                        .HasForeignKey("alquilerID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AlquilerDeBicicletas.Models.Bicicleta", b =>
                {
                    b.HasOne("AlquilerDeBicicletas.Models.TipoDeBici", "tipoDeBici")
                        .WithMany("bicicletas")
                        .HasForeignKey("tipoDeBiciID");
                });

            modelBuilder.Entity("AlquilerDeBicicletas.Models.Pago", b =>
                {
                    b.HasOne("AlquilerDeBicicletas.Models.Alquiler", "alquiler")
                        .WithMany("pagos")
                        .HasForeignKey("alquilerID");
                });
#pragma warning restore 612, 618
        }
    }
}
